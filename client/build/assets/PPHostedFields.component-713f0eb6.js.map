{"version":3,"file":"PPHostedFields.component-713f0eb6.js","sources":["../../src/app/paypal/pages/PPHostedFields/PPHostedFields.component.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Card, OutputJson } from '../../../../lib/components/export.jsx'\nimport AppService from '../../../../services/app.service.jsx'\nimport createLoggers from '../../../../utils/logger.utils.jsx'\nimport withOperations from '../../../../layouts/withOperations.component.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../states/Busy/busy.hooks.jsx'\n\nconst { log, error } = createLoggers('PPHostedFields.component.jsx')\n\nconst _operations = {\n    loadPayPalSDK: {\n        label: 'Load PayPal JS SDK',\n        type: 'client',\n        data: {\n            options: {},\n            dataAttributes: {},\n        },\n    },\n    createOrder: {\n        label: 'Create Order',\n        type: 'server',\n        data: {\n            uri: 'v2/checkout/orders',\n            method: 'POST',\n            body: {\n                intent: 'CAPTURE',\n                purchase_units: [\n                    {\n                        invoice_id: 'INV-' + Math.round(new Date().getTime() / 1000),\n                        amount: {\n                            currency_code: 'USD',\n                            value: '220.00',\n                        },\n                    },\n                ],\n            },\n        },\n    },\n    onApprove: {\n        label: 'Execute Order',\n        type: 'server',\n        data: {\n            uri: 'v2/checkout/orders',\n            method: 'POST',\n            body: {},\n        },\n    },\n}\n\nconst PPHostedFields = () => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const [order] = useState({\n        intent: 'CAPTURE',\n        purchase_units: [\n            {\n                invoice_id: 'INV-' + Math.round(new Date().getTime() / 1000),\n                soft_descriptor: 'CustomDescriptor',\n                amount: {\n                    currency_code: 'USD',\n                    value: '220.00',\n                },\n            },\n        ],\n    })\n    const [hostedFieldsInstance, setHostedFieldsInstance] = useState({})\n\n    useEffect(() => {\n        const initialize = async () => {\n            const paypal = await AppService.scripts.paypal.jsv5(\n                {},\n                {\n                    'data-client-token': '12345',\n                },\n            )\n            if (paypal?.HostedFields?.isEligible()) {\n                renderPayPalHostedFields(paypal)\n            } else {\n                document.getElementById('paypalHostedFields').style.display = 'none'\n                AppService.logger.error('Not eligible for PayPal Hosted Fields')\n            }\n        }\n        initialize().then()\n    }, [])\n\n    const renderPayPalHostedFields = (paypal) => {\n        paypal.HostedFields.render({\n            createOrder: function () {\n                return 'order-ID'\n            }, // replace order-ID with the order ID\n            styles: {\n                input: {\n                    'font-size': '17px',\n                    'font-family': 'helvetica, tahoma, calibri, sans-serif',\n                    color: '#3a3a3a',\n                },\n                ':focus': {\n                    color: 'black',\n                },\n            },\n            fields: {\n                number: {\n                    selector: '#card-number',\n                    placeholder: 'card number',\n                },\n                cvv: {\n                    selector: '#cvv',\n                    placeholder: 'card security number',\n                },\n                expirationDate: {\n                    selector: '#expiration-date',\n                    placeholder: 'mm/yy',\n                },\n            },\n        }).then((hostedFields) => setHostedFieldsInstance(hostedFields))\n    }\n\n    const onSubmit = async () => {\n        addBusy()\n        try {\n            const response = await hostedFieldsInstance.submit({\n                // Cardholder Name\n                cardholderName: document.getElementById('card-holder-name').value,\n                // Billing Address\n                billingAddress: {\n                    streetAddress: document.getElementById('card-billing-address-street').value, // address_line_1 - street\n                    extendedAddress: document.getElementById('card-billing-address-unit').value, // address_line_2 - unit\n                    region: document.getElementById('card-billing-address-state').value, // admin_area_1 - state\n                    locality: document.getElementById('card-billing-address-city').value, // admin_area_2 - town / city\n                    postalCode: document.getElementById('card-billing-address-zip').value, // postal_code - postal_code\n                    countryCodeAlpha2: document.getElementById('card-billing-address-country').value, // country_code - country\n                },\n            })\n            log('onSubmit', response)\n        } catch (e) {\n            error(e)\n        }\n        removeBusy()\n    }\n\n    return (\n        <>\n            <h3>PayPal Checkout - Advance Payments</h3>\n            <hr />\n            <Card>\n                <div id=\"paypalCheckoutDiv\" />\n                <div id=\"paypalHostedFields\">\n                    <div> -- OR -- </div>\n                    <div>\n                        <label htmlFor=\"cardNumber\">Card Number</label>\n                        <div id=\"cardNumber\" className=\"cardField\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"expirationDate\">Expiration Date</label>\n                        <div id=\"expirationDate\" className=\"cardField\" />\n                    </div>\n                    <div>\n                        <label htmlFor=\"cvv\">CVV</label>\n                        <div id=\"cvv\" className=\"card_field\" />\n                    </div>\n                    <label htmlFor=\"card-holder-name\">Name on Card</label>\n                    <input\n                        type=\"text\"\n                        id=\"card-holder-name\"\n                        name=\"card-holder-name\"\n                        autoComplete=\"off\"\n                        placeholder=\"card holder name\"\n                    />\n                    <div>\n                        <label htmlFor=\"card-billing-address-street\">Billing Address</label>\n                        <input\n                            type=\"text\"\n                            id=\"card-billing-address-street\"\n                            name=\"card-billing-address-street\"\n                            autoComplete=\"off\"\n                            placeholder=\"street address\"\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"card-billing-address-unit\">&nbsp;</label>\n                        <input\n                            type=\"text\"\n                            id=\"card-billing-address-unit\"\n                            name=\"card-billing-address-unit\"\n                            autoComplete=\"off\"\n                            placeholder=\"unit\"\n                        />\n                    </div>\n                    <div>\n                        <input\n                            type=\"text\"\n                            id=\"card-billing-address-city\"\n                            name=\"card-billing-address-city\"\n                            autoComplete=\"off\"\n                            placeholder=\"city\"\n                        />\n                    </div>\n                    <div>\n                        <input\n                            type=\"text\"\n                            id=\"card-billing-address-state\"\n                            name=\"card-billing-address-state\"\n                            autoComplete=\"off\"\n                            placeholder=\"state\"\n                        />\n                    </div>\n                    <div>\n                        <input\n                            type=\"text\"\n                            id=\"card-billing-address-zip\"\n                            name=\"card-billing-address-zip\"\n                            autoComplete=\"off\"\n                            placeholder=\"zip / postal code\"\n                        />\n                    </div>\n                    <div>\n                        <input\n                            type=\"text\"\n                            id=\"card-billing-address-country\"\n                            name=\"card-billing-address-country\"\n                            autoComplete=\"off\"\n                            placeholder=\"country code\"\n                        />\n                    </div>\n                    <br />\n                    <br />\n                    <button value=\"submit\" id=\"submit\" className=\"btn\" onClick={onSubmit}>\n                        Pay\n                    </button>\n                </div>\n            </Card>\n            <br />\n            <OutputJson content={order} />\n        </>\n    )\n}\n\nexport default withOperations(PPHostedFields, _operations)\n"],"names":["log","error","createLoggers","_operations","PPHostedFields","addBusy","useAddBusy","removeBusy","useRemoveBusy","order","useState","hostedFieldsInstance","setHostedFieldsInstance","useEffect","paypal","AppService","renderPayPalHostedFields","hostedFields","jsxs","Fragment","jsx","Card","response","e","OutputJson","PPHostedFields_component","withOperations"],"mappings":"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"}