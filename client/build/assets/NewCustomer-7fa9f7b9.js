import{d as S,e as I,f as D,g as A,l as E,r as u,b as f,F as B,j as t,P as v}from"./index-346127e2.js";import{B as T,s as O}from"./BraintreeInterface-06e397b0.js";import{w as _}from"./withSDKOperations-56175d0a.js";import{l as s,d as c}from"./LoggerService-c6aefb93.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./InputText.component-ca15f820.js";const x=Date.now(),K={paypalCheckoutCreate:{label:"braintree-web.paypalCheckout.create(options, callback)",type:"client",data:{options:{client:"CLIENT_INSTANCE_HERE"}}},loadPayPalSDK:{label:"paypalCheckoutInstance.loadPayPalSDK(options, callback)",type:"client",data:{options:{currency:"USD",intent:"capture","disable-funding":"card"}}},renderPayPalButtons:{label:"window.paypal.Buttons(config).render",type:"client",data:{config:{style:{layout:"vertical",color:"gold",shape:"rect",label:"paypal",tagline:!1}}}},createPayment:{label:"paypalCheckoutInstance.createPayment(options, callback)",type:"client",data:{options:{flow:"checkout",intent:"capture",amount:"100.00",currency:"USD",requestBillingAgreement:!0,billingAgreementDetails:{description:"Braintree PwPP - Checkout + Vault - "+x},enableShippingAddress:!0,shippingAddressEditable:!0}}},tokenizePayment:{label:"paypalCheckoutInstance.tokenizePayment(tokenizeOptions, callback)",type:"client",data:{tokenizeOptions:{}}},transactionSale:{label:"gateway.transaction.sale(parameters, callback)",type:"server",data:{parameters:{amount:"100.00",merchantAccountId:"odesai_USD",paymentMethodNonce:"NONCE_HERE",deviceData:"DEVICE_DATA_HERE",options:{submitForSettlement:!0}}}}},z=["clientInstance","deviceData"],P=l=>{const n=S(),o=I(),i=D(),r=A(),y=E(),d=u.useRef(),[p,m]=u.useState(""),[C,b]=u.useState(""),h=async()=>{n();try{const e=await T.create({client:y.clientInstance});s("NewCustomer",e),i("PayPalInstance",e),m(e)}catch(e){r(),c("NewCustomer: createPayPalInstance",e)}o()},k=async()=>{n(),await p.loadPayPalSDK(l.operations.loadPayPalSDK.data.options),o()},w=async()=>{n();try{await window.paypal.Buttons({...l.operations.renderPayPalButtons.data.config,fundingSource:window.paypal.FUNDING.PAYPAL,createOrder:N,onApprove:g,onClick:()=>console.log("PayPalCheckout: onClick"),onInit:()=>console.log("PayPalCheckout: onInit"),onCancel:e=>console.error("PayPalCheckout: onCancel",e),onError:e=>console.error("PayPalCheckout: onError",e)}).render(d.current)}catch(e){r(),c("NewCustomer: renderPayPalButtons",e)}o()},N=async()=>{n();try{const e=await p.createPayment(l.operations.createPayment.data.options);return s("PayPalCheckout: createOrder",e),e}catch(e){r(),c("PayPalCheckout: createOrder",e)}o()},g=async e=>{n();try{s("PayPalCheckout: onApprove",e);const a=await p.tokenizePayment(e);s("NewCustomer: tokenizePayment",a),i("PayPalCheckout: onApprove",a),b(a.nonce)}catch(a){r(),c("PayPalCheckout: onApprove",a)}o()};return f(B,{children:[t("button",{className:"btn btn-outline-success",onClick:h,children:"Create PayPal Instance"}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:k,children:"Load PayPal JS SDK"}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:w,children:"Render PayPal Buttons"}),t("br",{}),t("br",{}),t("div",{ref:d}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:async()=>{n();try{const e={...l.operations.transactionSale.data.parameters,paymentMethodNonce:C,deviceData:y.get("dataCollectorInstance")},a=await O("transaction","sale",[],e);s("NewCustomer: createTransaction",a),i("TransactionSale",a)}catch(e){r(),c("NewCustomer: createTransaction",e)}o()},children:"Create Transaction"})]})};P.propTypes={operations:v.object};const M=_(P,K,z);export{M as default};
//# sourceMappingURL=NewCustomer-7fa9f7b9.js.map
