{"version":3,"file":"BTDataCollector.component-a85181a0.js","sources":["../../src/app/braintree/pages/client/BTDataCollector/BTDataCollector.component.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport withOperations from '../../../../../layouts/withOperations.component.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../../states/Busy/busy.hooks.jsx'\nimport { useAddOutput } from '../../../../../states/Output/output.hooks.jsx'\nimport { useSetError } from '../../../../../states/Error/error.hooks.jsx'\nimport { useAppContext, useAddAppContext } from '../../../../../states/AppContext/appContext.hooks.jsx'\nimport { log, danger } from '../../../../../integrations/services/LoggerService.jsx'\nimport { clientInterface } from '../../../../../services/bt.service.jsx'\n\nconst _operations = {\n    dataCollectorCreate: {\n        label: 'braintree-web.dataCollector.create()',\n        type: 'client',\n        data: {\n            options: {\n                client: 'BT_CLIENT_INSTANCE',\n                kount: true,\n                paypal: true,\n            },\n        },\n    },\n}\n\nconst BTDataCollector = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const addOutput = useAddOutput()\n    const setError = useSetError()\n    const appContext = useAppContext()\n    const addAppContext = useAddAppContext()\n\n    const createDataCollector = async () => {\n        addBusy()\n        try {\n            const dcInstance = await clientInterface('DataCollector', {\n                ...props.operations.dataCollectorCreate.data.options,\n                client: appContext['clientInstance'],\n            })\n            log('DataCollectorAll: createDataCollector', dcInstance)\n            addOutput('DataCollector', dcInstance)\n            if (dcInstance) addAppContext('dcInstance', dcInstance)\n        } catch (error) {\n            setError()\n            danger('DataCollectorAll: createDataCollector', error)\n        }\n        removeBusy()\n    }\n\n    return (\n        <button className=\"btn btn-outline-success\" onClick={createDataCollector}>\n            Create DC Instance\n        </button>\n    )\n}\n\nBTDataCollector.propTypes = {\n    operations: PropTypes.object,\n}\n\nexport default withOperations(BTDataCollector, _operations, ['clientInstance'])\n"],"names":["_operations","BTDataCollector","props","addBusy","useAddBusy","removeBusy","useRemoveBusy","addOutput","useAddOutput","setError","useSetError","appContext","useAppContext","addAppContext","useAddAppContext","dcInstance","clientInterface","log","error","danger","PropTypes","BTDataCollector_component","withOperations"],"mappings":"kWASA,MAAMA,EAAc,CAChB,oBAAqB,CACjB,MAAO,uCACP,KAAM,SACN,KAAM,CACF,QAAS,CACL,OAAQ,qBACR,MAAO,GACP,OAAQ,EACZ,CACJ,CACJ,CACJ,EAEMC,EAAmBC,GAAU,CAC/B,MAAMC,EAAUC,IACVC,EAAaC,IACbC,EAAYC,IACZC,EAAWC,IACXC,EAAaC,IACbC,EAAgBC,IAmBtB,SACK,SAAO,CAAA,UAAU,0BAA0B,QAlBpB,SAAY,CAC5BX,IACJ,GAAA,CACM,MAAAY,EAAa,MAAMC,EAAgB,gBAAiB,CACtD,GAAGd,EAAM,WAAW,oBAAoB,KAAK,QAC7C,OAAQS,EAAW,cAAgB,CACtC,EACDM,EAAI,wCAAyCF,CAAU,EACvDR,EAAU,gBAAiBQ,CAAU,EACjCA,GAAYF,EAAc,aAAcE,CAAU,QACjDG,GACIT,IACTU,EAAO,wCAAyCD,CAAK,CACzD,CACWb,GAAA,EAI+D,SAE1E,oBAAA,CAAA,CAER,EAEAJ,EAAgB,UAAY,CACxB,WAAYmB,EAAU,MAC1B,EAEA,MAAeC,EAAAC,EAAerB,EAAiBD,EAAa,CAAC,gBAAgB,CAAC"}