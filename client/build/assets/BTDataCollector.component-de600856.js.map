{"version":3,"file":"BTDataCollector.component-de600856.js","sources":["../../src/app/braintree/pages/client/BTDataCollector/BTDataCollector.component.jsx"],"sourcesContent":["import { useEffect } from 'react'\nimport withOperations from '../../../../../layouts/withOperations.component.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../../states/Busy/busy.hooks.jsx'\nimport { useAddOutput } from '../../../../../states/Output/output.hooks.jsx'\nimport { useSetError } from '../../../../../states/Error/error.hooks.jsx'\nimport { useAppContext, useAddAppContext } from '../../../../../states/AppContext/appContext.hooks.jsx'\nimport { clientInterface } from '../../../../../services/bt.service.jsx'\nimport createLoggers from '../../../../../utils/logger.utils.jsx'\n\nconst { log, error } = createLoggers('BTDataCollector.component.jsx')\n\nconst _operations = {\n    createDataCollector: {\n        label: 'braintree-web.dataCollector.create()',\n        type: 'client',\n        data: {\n            options: {\n                client: 'CLIENT_INSTANCE_HERE',\n                paypal: true,\n            },\n        },\n    },\n}\n\nconst BTDataCollector = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const addOutput = useAddOutput()\n    const setError = useSetError()\n    const appContext = useAppContext()\n    const addAppContext = useAddAppContext()\n\n    useEffect(() => {\n        const initOperation = () => {\n            if (\n                props.operations.createDataCollector.data.options.client !==\n                _operations.createDataCollector.data.options.client\n            )\n                return null\n            const newData = props.operations.createDataCollector.data\n            newData.options.client = appContext.clientInstance\n            props.updateOperation('createDataCollector', newData)\n        }\n        appContext.clientInstance && initOperation()\n    }, [props, appContext.clientInstance])\n\n    const createDataCollector = async () => {\n        addBusy()\n        try {\n            console.log(props.operations.createDataCollector.data.options)\n            const dcInstance = await clientInterface('DataCollector', props.operations.createDataCollector.data.options)\n            log('createDataCollector', dcInstance)\n            addOutput('DataCollector', dcInstance)\n            if (dcInstance) addAppContext('dcInstance', dcInstance)\n        } catch (e) {\n            setError()\n            error(e)\n        }\n        removeBusy()\n    }\n\n    return (\n        <button className=\"btn btn-outline-success\" onClick={createDataCollector}>\n            Create DC Instance\n        </button>\n    )\n}\n\nexport default withOperations(BTDataCollector, _operations, ['clientInstance'])\n"],"names":["log","error","createLoggers","_operations","BTDataCollector","props","addBusy","useAddBusy","removeBusy","useRemoveBusy","addOutput","useAddOutput","setError","useSetError","appContext","useAppContext","addAppContext","useAddAppContext","useEffect","initOperation","newData","dcInstance","clientInterface","e","BTDataCollector_component","withOperations"],"mappings":"2TASA,KAAM,CAAE,IAAAA,EAAK,MAAAC,CAAM,EAAIC,EAAc,+BAA+B,EAE9DC,EAAc,CAChB,oBAAqB,CACjB,MAAO,uCACP,KAAM,SACN,KAAM,CACF,QAAS,CACL,OAAQ,uBACR,OAAQ,EACZ,CACJ,CACJ,CACJ,EAEMC,EAAmBC,GAAU,CAC/B,MAAMC,EAAUC,IACVC,EAAaC,IACbC,EAAYC,IACZC,EAAWC,IACXC,EAAaC,IACbC,EAAgBC,IAEtBC,OAAAA,EAAAA,UAAU,IAAM,CACZ,MAAMC,EAAgB,IAAM,CAEpB,GAAAd,EAAM,WAAW,oBAAoB,KAAK,QAAQ,SAClDF,EAAY,oBAAoB,KAAK,QAAQ,OAEtC,OAAA,KACL,MAAAiB,EAAUf,EAAM,WAAW,oBAAoB,KAC7Ce,EAAA,QAAQ,OAASN,EAAW,eAC9BT,EAAA,gBAAgB,sBAAuBe,CAAO,CAAA,EAExDN,EAAW,gBAAkBK,GAC9B,EAAA,CAACd,EAAOS,EAAW,cAAc,CAAC,IAkBhC,SAAO,CAAA,UAAU,0BAA0B,QAhBpB,SAAY,CAC5BR,IACJ,GAAA,CACA,QAAQ,IAAID,EAAM,WAAW,oBAAoB,KAAK,OAAO,EACvD,MAAAgB,EAAa,MAAMC,EAAgB,gBAAiBjB,EAAM,WAAW,oBAAoB,KAAK,OAAO,EAC3GL,EAAI,sBAAuBqB,CAAU,EACrCX,EAAU,gBAAiBW,CAAU,EACjCA,GAAYL,EAAc,aAAcK,CAAU,QACjDE,GACIX,IACTX,EAAMsB,CAAC,CACX,CACWf,GAAA,EAI+D,SAE1E,oBAAA,CAAA,CAER,EAEegB,EAAAC,EAAerB,EAAiBD,EAAa,CAAC,gBAAgB,CAAC"}