{"version":3,"file":"PPCheckout.component-1df1dffe.js","sources":["../../src/utils/dom.utils.jsx","../../src/services/paypal.service.jsx","../../src/features/PayPalButtons.components.jsx","../../src/app/paypal/pages/PPCheckout/PPCheckout.component.jsx"],"sourcesContent":["const loadScript = (url, queryParams = {}, dataAttributes = {}) => {\n    return new Promise((resolve, reject) => {\n        const script = document.createElement('script')\n        const finalUrl = new URL(url)\n\n        for (const key in queryParams) {\n            finalUrl.searchParams.append(key, queryParams[key])\n        }\n\n        for (const key in dataAttributes) {\n            script.setAttribute(key, dataAttributes[key])\n        }\n\n        const onLoad = () => {\n            resolve(script)\n            script.removeEventListener('error', onError)\n            script.removeEventListener('load', onLoad)\n        }\n\n        const onError = (e) => {\n            reject(e)\n            script.removeEventListener('error', onError)\n            script.removeEventListener('load', onLoad)\n        }\n\n        script.src = finalUrl.href\n        script.async = true\n        document.body.appendChild(script)\n\n        script.addEventListener('load', onLoad)\n        script.addEventListener('error', onError)\n    })\n}\n\nexport { loadScript }\n","import { loadScript } from '../utils/dom.utils'\nimport { jsonRequest } from '../utils/http.utils.jsx'\n\nconst loadPPScript = async (options = {}, dataAttributes = {}) => {\n    const queryParams = {\n        components: 'buttons,funding-eligibility',\n        'client-id': 'test',\n        'disable-funding': 'card',\n        ...options,\n    }\n    return await loadScript('https://www.paypal.com/sdk/js', queryParams, dataAttributes)\n}\n\nconst restInterface = async (uri, method, body = {}, apiHeaders = {}) => {\n    const url = '/api/paypal/rest/interface'\n    const authHeaders = localStorage.getItem('authHeader')\n        ? {\n              authorization: 'Basic ' + localStorage.getItem('authHeader'),\n          }\n        : {}\n    const postData = {\n        uri: uri,\n        headers: apiHeaders,\n        body: body,\n    }\n\n    return await jsonRequest[method.toLowerCase()](url, postData, authHeaders)\n}\n\nexport { loadPPScript, restInterface }\n","import PropTypes from 'prop-types'\nimport { useRef, useMemo, useEffect } from 'react'\nimport createLoggers from '../utils/logger.utils.jsx'\n\nconst { log, error, warn } = createLoggers('PayPalButtons.component.js')\n\nconst PayPalButtonsCore = (props) => {\n    const ppContainer = useRef()\n\n    // Final PayPal Buttons Configuration\n    const finalPPConfig = useMemo(() => {\n        return {\n            style: {\n                color: 'black',\n                layout: 'vertical',\n                shape: 'rect',\n                label: 'paypal',\n                tagline: 'false',\n            },\n            onClick: (data, actions) => log('PayPalButtons: onClick', { data, actions }),\n            onInit: (data, actions) => log('PayPalButtons: onInit', { data, actions }),\n            createOrder: (data, actions) => log('PayPalButtons: createOrder', { data, actions }),\n            onApprove: (data, actions) => log('PayPalButtons: onApprove', { data, actions }),\n            onCancel: (e) => error('PayPalButtons: onCancel', e),\n            onError: (e) => error('PayPalButtons: onError', e),\n            ...props.ppConfig,\n        }\n    }, [props.ppConfig])\n\n    // Render PayPal Buttons\n    useEffect(() => {\n        const container = ppContainer.current\n\n        const initialize = async () => {\n            const fundingSources = props.fundingSources || window.paypal.getFundingSources()\n            log(props.fundingSources)\n            for (const fundingSource of fundingSources) {\n                const button = window.paypal.Buttons({\n                    ...finalPPConfig,\n                    fundingSource: fundingSource,\n                })\n                try {\n                    if (button.isEligible() && container) await button.render(container)\n                } catch (error) {\n                    // CRITICAL: Catch error when render fails because DOM is closed or destroyed.\n                    warn('PayPalButtons', error.message)\n                }\n            }\n        }\n        finalPPConfig && initialize()\n\n        return () => {\n            window.paypal.Buttons.instances.forEach((button) => button.close())\n            container.innerHTML = null\n        }\n    }, [finalPPConfig, props.fundingSources])\n\n    return <div ref={ppContainer} />\n}\n\nconst PayPalButtons = (props) =>\n    props.ppConfig && window?.paypal?.Buttons ? (\n        <PayPalButtonsCore ppConfig={props.ppConfig} fundingSources={props.fundingSources} />\n    ) : null\n\nPayPalButtonsCore.propTypes = PayPalButtons.propTypes = {\n    ppConfig: PropTypes.object,\n    fundingSources: PropTypes.array,\n}\n\nexport default PayPalButtons\n","import { useState } from 'react'\nimport withOperations from '../../../../layouts/withOperations.component.jsx'\nimport createLoggers from '../../../../utils/logger.utils.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../states/Busy/busy.hooks.jsx'\n// import { useAddOutput } from '../../../../states/Output/output.hooks.jsx'\nimport { useSetError } from '../../../../states/Error/error.hooks.jsx'\nimport { loadPPScript, restInterface } from '../../../../services/paypal.service.jsx'\nimport PayPalButtons from '../../../../features/PayPalButtons.components.jsx'\n\nconst { log, error } = createLoggers('PPCheckout.component.jsx')\n\nconst _operations = {\n    loadPayPalSDK: {\n        label: 'Load PayPal JS SDK',\n        type: 'client',\n        data: {\n            options: {},\n            dataAttributes: {},\n        },\n    },\n    createOrder: {\n        label: 'Create Order',\n        type: 'server',\n        data: {\n            uri: 'v2/checkout/orders',\n            method: 'POST',\n            body: {\n                intent: 'CAPTURE',\n                purchase_units: [\n                    {\n                        invoice_id: 'INV-' + Math.round(new Date().getTime() / 1000),\n                        amount: {\n                            currency_code: 'USD',\n                            value: '220.00',\n                        },\n                    },\n                ],\n            },\n        },\n    },\n    onApprove: {\n        label: 'Execute Order',\n        type: 'server',\n        data: {\n            uri: 'v2/checkout/orders',\n            method: 'POST',\n            body: {},\n        },\n    },\n}\n\nconst PPCheckout = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    // const addOutput = useAddOutput()\n    const setError = useSetError()\n\n    const [ppConfig, setPPConfig] = useState(undefined)\n\n    const loadPayPalSDK = async () => {\n        addBusy()\n        const { options, dataAttributes } = props.operations.loadPayPalSDK.data\n        await loadPPScript(options, dataAttributes)\n        removeBusy()\n    }\n\n    const renderPayPalButtons = () => {\n        addBusy()\n        if (!window?.paypal?.Buttons) return error('renderPayPalButtons', 'Unable to load PayPal Checkout SDK')\n        setPPConfig({\n            createOrder: async () => {\n                addBusy()\n                let response = undefined\n                try {\n                    response = await restInterface(\n                        props.operations.createOrder.data.uri,\n                        props.operations.createOrder.data.method,\n                        props.operations.createOrder.data.body,\n                    )\n                    log('createOrder', response)\n                } catch (e) {\n                    setError()\n                    error('createOrder', e)\n                }\n                removeBusy()\n                return response?.id\n            },\n\n            onApprove: async (data) => {\n                addBusy()\n                try {\n                    log('onApprove', data)\n                    // const response = await ppInstance.tokenizePayment(data)\n                    // log('executeOrder', response)\n                    // addOutput('ExecuteOrder', response)\n                } catch (e) {\n                    setError()\n                    error('onApprove', e)\n                }\n                removeBusy()\n            },\n        })\n        removeBusy()\n    }\n\n    return (\n        <>\n            <button className=\"btn btn-outline-success\" onClick={loadPayPalSDK}>\n                Load PayPal JS SDK\n            </button>\n            <br />\n            <button className=\"btn btn-outline-success\" onClick={renderPayPalButtons}>\n                Render PayPal Buttons\n            </button>\n            <br />\n            <button className=\"btn btn-outline-success\" onClick={renderPayPalButtons}>\n                Execute Order\n            </button>\n            <br />\n            <br />\n            <PayPalButtons ppConfig={ppConfig} fundingSources={['paypal']} />\n        </>\n    )\n}\n\nexport default withOperations(PPCheckout, _operations)\n"],"names":["loadScript","url","queryParams","dataAttributes","resolve","reject","script","finalUrl","key","onLoad","onError","e","loadPPScript","options","restInterface","uri","method","body","apiHeaders","authHeaders","postData","jsonRequest","log","error","warn","createLoggers","PayPalButtonsCore","props","ppContainer","useRef","finalPPConfig","useMemo","data","actions","useEffect","container","fundingSources","fundingSource","button","jsx","PayPalButtons","PropTypes","_operations","PPCheckout","addBusy","useAddBusy","removeBusy","useRemoveBusy","setError","useSetError","ppConfig","setPPConfig","useState","loadPayPalSDK","renderPayPalButtons","response","jsxs","Fragment","PPCheckout_component","withOperations"],"mappings":"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"}