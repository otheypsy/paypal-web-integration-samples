{"version":3,"file":"TokenizationKey.component-f9975699.js","sources":["../../src/app/braintree/pages/client/BTClientInstance/sections/TokenizationKey.component.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport withOperations from '../../../../../../layouts/withOperations.component.jsx'\nimport createLoggers from '../../../../../../utils/logger.utils.jsx'\nimport { clientInterface } from '../../../../../../services/bt.service.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../../../states/Busy/busy.hooks.jsx'\nimport { useSetError } from '../../../../../../states/Error/error.hooks.jsx'\nimport { useAddOutput } from '../../../../../../states/Output/output.hooks.jsx'\nimport { useAddAppContext } from '../../../../../../states/AppContext/appContext.hooks.jsx'\n\nconst { log, error } = createLoggers('TokenizationKey.component.jsx')\n\nconst _operations = {\n    clientCreate: {\n        label: 'braintree-web.client.create()',\n        type: 'client',\n        data: {\n            options: {\n                authorization: 'TOKENIZATION_KEY_HERE',\n            },\n        },\n    },\n}\n\nconst TokenizationKey = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const addOutput = useAddOutput()\n    const setError = useSetError()\n    const addAppContext = useAddAppContext()\n\n    const createClientInstance = async () => {\n        addBusy()\n        try {\n            const clientInstance = await clientInterface('Client', props.operations.clientCreate.data.options)\n            log('createClientInstance', clientInstance)\n            addOutput('ClientInstance', clientInstance)\n            if (clientInstance) addAppContext('clientInstance', clientInstance)\n        } catch (e) {\n            setError()\n            error(e)\n        }\n        removeBusy()\n    }\n\n    return (\n        <button className=\"btn btn-outline-success\" onClick={createClientInstance}>\n            Create Client Instance\n        </button>\n    )\n}\n\nTokenizationKey.propTypes = {\n    operations: PropTypes.object,\n}\nexport default withOperations(TokenizationKey, _operations)\n"],"names":["log","error","createLoggers","_operations","TokenizationKey","props","addBusy","useAddBusy","removeBusy","useRemoveBusy","addOutput","useAddOutput","setError","useSetError","addAppContext","useAddAppContext","clientInstance","clientInterface","e","PropTypes","TokenizationKey_component","withOperations"],"mappings":"oTASA,KAAM,CAAE,IAAAA,EAAK,MAAAC,CAAM,EAAIC,EAAc,+BAA+B,EAE9DC,EAAc,CAChB,aAAc,CACV,MAAO,gCACP,KAAM,SACN,KAAM,CACF,QAAS,CACL,cAAe,uBACnB,CACJ,CACJ,CACJ,EAEMC,EAAmBC,GAAU,CAC/B,MAAMC,EAAUC,IACVC,EAAaC,IACbC,EAAYC,IACZC,EAAWC,IACXC,EAAgBC,IAgBtB,SACK,SAAO,CAAA,UAAU,0BAA0B,QAfnB,SAAY,CAC7BT,IACJ,GAAA,CACM,MAAAU,EAAiB,MAAMC,EAAgB,SAAUZ,EAAM,WAAW,aAAa,KAAK,OAAO,EACjGL,EAAI,uBAAwBgB,CAAc,EAC1CN,EAAU,iBAAkBM,CAAc,EACtCA,GAAgBF,EAAc,iBAAkBE,CAAc,QAC7DE,GACIN,IACTX,EAAMiB,CAAC,CACX,CACWV,GAAA,EAIgE,SAE3E,wBAAA,CAAA,CAER,EAEAJ,EAAgB,UAAY,CACxB,WAAYe,EAAU,MAC1B,EACA,MAAAC,EAAeC,EAAejB,EAAiBD,CAAW"}