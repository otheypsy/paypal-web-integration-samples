import{r as d,d as E,e as S,f,g as R,k as w,c as A,F as v,j as t,P as D}from"./main-db23e68b.js";import{B,s as T}from"./BraintreeInterface-f8af6eae.js";import{w as N}from"./withSDKOperations-1a9628a9.js";import{l as s,d as c}from"./LoggerService-5538c8b6.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./InputText.component-2c01f2f0.js";const O={paypalCheckoutCreate:{label:"braintree-web.paypalCheckout.create(options, callback)",type:"client",data:{options:{client:"CLIENT_INSTANCE_HERE",autoSetDataUserIdToken:!0}}},loadPayPalSDK:{label:"paypalCheckoutInstance.loadPayPalSDK(options, callback)",type:"client",data:{options:{currency:"USD",intent:"capture","disable-funding":"card",dataAttributes:{amount:"100.00",commit:!0}}}},renderPayPalButtons:{label:"window.paypal.Buttons(config).render",type:"client",data:{config:{style:{layout:"vertical",color:"gold",shape:"rect",label:"paypal",tagline:!1}}}},createPayment:{label:"paypalCheckoutInstance.createPayment(options, callback)",type:"client",data:{options:{flow:"checkout",intent:"capture",amount:"100.00",currency:"USD",enableShippingAddress:!0,shippingAddressEditable:!0}}},tokenizePayment:{label:"paypalCheckoutInstance.tokenizePayment(tokenizeOptions, callback)",type:"client",data:{tokenizeOptions:{}}},transactionSale:{label:"gateway.transaction.sale(parameters, callback)",type:"server",data:{parameters:{amount:"100.00",merchantAccountId:"odesai_USD",paymentMethodNonce:"NONCE_HERE",deviceData:"DEVICE_DATA_HERE",options:{submitForSettlement:!0}}}}},K={Component:()=>null},P=a=>{const i=d.useRef(),[l,C]=d.useState(void 0),n=E(),o=S(),u=f(),m=R(),b=w(),k=async()=>{n();try{const e=await B.create({...a.operations.paypalCheckoutCreate.data.options,client:b.clientInstance});s("ReturningCustomer: createPayPalInstance",e),C(e)}catch(e){m(),c("ReturningCustomer: createPayPalInstance",e)}o()},h=async()=>{n(),await l.loadPayPalSDK(a.operations.loadPayPalSDK.data.options),o()},g=async()=>{n(),await window.paypal.Buttons({...a.operations.renderPayPalButtons.data.config,createOrder:p,onApprove:y,onClick:()=>console.log("PayPalCheckout: onClick"),onInit:()=>console.log("PayPalCheckout: onInit"),onCancel:e=>console.error("PayPalCheckout: onCancel",e),onError:e=>console.error("PayPalCheckout: onError",e)}).render(i.current),o()},p=async()=>{let e;n();try{e=await l.createPayment(a.operations.createPayment.data.options),s("ReturningCustomer: createOrder",e)}catch(r){c("ReturningCustomer: onApprove",r)}return o(),e},y=async e=>{n();try{const r=await l.tokenizePayment(e);s("ReturningCustomer: onApprove",r),u("Payload",r)}catch(r){c("ReturningCustomer: onApprove",r)}o()},I={...a.operations.renderPayPalButtons.data.config,createOrder:p,onApprove:y,onClick:()=>console.log("PayPalCheckout: onClick"),onInit:()=>console.log("PayPalCheckout: onInit"),onCancel:e=>console.error("PayPalCheckout: onCancel",e),onError:e=>console.error("PayPalCheckout: onError",e)};return A(v,{children:[t("button",{className:"btn btn-outline-success",onClick:k,children:"Create PayPal Instance"}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:h,children:"Load PayPal JS SDK"}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:g,children:"Render PayPal Buttons"}),t("br",{}),t("br",{}),t("div",{ref:i}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:async()=>{n();try{const e=await T("transaction","sale",[],a.operations.transactionSale.data.parameters);s("ReturningCustomer: createTransaction",e),u("Transaction",e)}catch(e){c("ReturningCustomer: onApprove",e)}o()},children:"Create Transaction"}),t("br",{}),t("br",{}),t(K.Component,{...I})]})};P.propTypes={operations:D.object};const L=N(P,O);export{L as default};
