{"version":3,"file":"AppLayout-af122f05.js","sources":["../../src/integrations/components/AppLink.jsx","../../src/integrations/components/TagPill.jsx","../../src/integrations/layouts/AppLayout.jsx"],"sourcesContent":["import { useMatch, useResolvedPath } from 'react-router-dom';\n\nconst AppLink = (props) => {\n\n    const resolved = useResolvedPath(props.to);\n    const match = useMatch({ path: resolved.pathname, end: false, caseSensitive: false });\n\n    const onClick = () => props.onClick(props.to);\n\n    return (props.isVisible || match)\n        ? (\n            <button\n                className={'list-group-item list-group-item-action ' + (match ? 'active' : 'text-secondary')}\n                onClick={onClick}>\n                <p className=\"my-1\">{props.label}</p>\n            </button>\n        )\n        : null\n};\n\nexport default AppLink;\n","const TagPill = (props) => {\n\n    const onClick = () => props.onClick(props.label);\n\n    return (\n        <button\n            type=\"button\"\n            className={'btn btn-sm m-1 px-3 badge-pill btn-' + props.btnColor}\n            onClick={onClick}>\n            {props.label}\n        </button>\n    );\n};\n\nexport default TagPill;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useNavigate, useResolvedPath} from 'react-router-dom';\nimport InputText from '../../lib/components/form/InputText/InputText.component';\nimport AppLink from \"../components/AppLink\";\nimport TagPill from \"../components/TagPill\";\n\nconst FilterGroup = (props) => {\n    return (\n        <>\n            <InputText\n                label={'-- search --'}\n                value={props.text}\n                onChange={props.onTextChange}\n            />\n            <TagPill\n                key={'clearAll'}\n                label={'X'}\n                onClick={props.reset}\n                btnColor={'danger'}>\n            </TagPill>\n            {Object.keys(props.tags).map(tag => {\n                const color = (props.tags[tag]) ? 'primary' : 'secondary';\n                return (\n                    <TagPill\n                        key={tag}\n                        label={tag}\n                        onClick={props.onTagClick}\n                        btnColor={color}>\n                    </TagPill>\n                )\n            })}\n        </>\n    )\n\n\n}\n\nconst AppLayout = (props) => {\n\n    const active = useResolvedPath();\n    const navigate = useNavigate();\n    const [labelFilter, setLabelFilter] = useState('');\n    const [tagFilter, setTagFilter] = useState([]);\n\n    useEffect(() => {\n        initFilters();\n    }, [active]);\n\n    const initFilters = () => {\n        const tagFilter = {};\n        props.links.forEach((link) => {\n            link.data.tags.forEach((tag) => {\n                tagFilter[tag] = false\n            });\n        });\n        setLabelFilter('');\n        setTagFilter(tagFilter);\n    };\n\n\n    const filterTags = (tags) => {\n        return Object.keys(tagFilter).every((tag) => {\n            return !(tagFilter[tag] && !tags.includes(tag));\n        });\n    };\n\n    const filterLabel = (label) => {\n        return label.toLowerCase().includes(labelFilter.toLocaleLowerCase());\n    }\n\n    const onLinkClick = (to) => navigate(to);\n\n    const onTagClick = (label) => {\n        setTagFilter({\n            ...tagFilter,\n            [label]: !tagFilter[label]\n        });\n    };\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <FilterGroup\n                        tags={tagFilter}\n                        onTagClick={onTagClick}\n                        text={labelFilter}\n                        onTextChange={setLabelFilter}\n                        reset={initFilters}\n                    />\n                    <br /><br />\n                    <div className=\"list-group p-2\">\n                        {props.links.map((link) => {\n                            const isVisible = (filterTags(link.data.tags) && filterLabel(link.label));\n                            return <AppLink\n                                key={link.path}\n                                to={link.path}\n                                label={link.label}\n                                isVisible={isVisible}\n                                onClick={onLinkClick}\n                            />\n                        })}\n                    </div>\n                </div>\n                <div className=\"col-9\">\n                    <Outlet />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default AppLayout;\n"],"names":["AppLink","props","resolved","useResolvedPath","match","useMatch","onClick","jsx","TagPill","FilterGroup","jsxs","Fragment","InputText","tag","color","AppLayout","active","navigate","useNavigate","labelFilter","setLabelFilter","useState","tagFilter","setTagFilter","useEffect","initFilters","link","filterTags","tags","filterLabel","label","onLinkClick","to","isVisible","Outlet"],"mappings":"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"}