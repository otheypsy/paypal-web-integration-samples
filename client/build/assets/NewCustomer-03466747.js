import{u as I,b as S,d as f,c as A,f as D,a as E,F as B,j as t}from"./index-5183357d.js";import{r as u,P as v}from"./vendor-d2c1d7ba.js";import{B as T,s as O}from"./bt.service-231e8587.js";import{w as _}from"./withOperations.hoc-a1e834ab.js";import{l as c,d as s}from"./LoggerService-c6aefb93.js";import"./logger.utils-ababba19.js";import"./http.utils-2a9b74b8.js";import"./InputText.component-62651ba0.js";const x=Date.now(),z={paypalCheckoutCreate:{label:"braintree-web.paypalCheckout.create(options, callback)",type:"client",data:{options:{client:"CLIENT_INSTANCE_HERE"}}},loadPayPalSDK:{label:"paypalCheckoutInstance.loadPayPalSDK(options, callback)",type:"client",data:{options:{currency:"USD",intent:"capture","disable-funding":"card"}}},renderPayPalButtons:{label:"window.paypal.Buttons(config).render",type:"client",data:{config:{style:{layout:"vertical",color:"gold",shape:"rect",label:"paypal",tagline:!1}}}},createPayment:{label:"paypalCheckoutInstance.createPayment(options, callback)",type:"client",data:{options:{flow:"checkout",intent:"capture",amount:"100.00",currency:"USD",requestBillingAgreement:!0,billingAgreementDetails:{description:"Braintree PwPP - Checkout + Vault - "+x},enableShippingAddress:!0,shippingAddressEditable:!0}}},tokenizePayment:{label:"paypalCheckoutInstance.tokenizePayment(tokenizeOptions, callback)",type:"client",data:{tokenizeOptions:{}}},transactionSale:{label:"gateway.transaction.sale(parameters, callback)",type:"server",data:{parameters:{amount:"100.00",merchantAccountId:"odesai_USD",paymentMethodNonce:"NONCE_HERE",deviceData:"DEVICE_DATA_HERE",options:{submitForSettlement:!0}}}}},K=["clientInstance","deviceData"],P=l=>{const n=I(),o=S(),i=f(),r=A(),y=D(),d=u.useRef(),[p,m]=u.useState(""),[C,b]=u.useState(""),h=async()=>{n();try{const e=await T.create({client:y.clientInstance});c("NewCustomer",e),i("PayPalInstance",e),m(e)}catch(e){r(),s("NewCustomer: createPayPalInstance",e)}o()},k=async()=>{n(),await p.loadPayPalSDK(l.operations.loadPayPalSDK.data.options),o()},w=async()=>{n();try{await window.paypal.Buttons({...l.operations.renderPayPalButtons.data.config,fundingSource:window.paypal.FUNDING.PAYPAL,createOrder:N,onApprove:g,onClick:()=>console.log("PayPalCheckout: onClick"),onInit:()=>console.log("PayPalCheckout: onInit"),onCancel:e=>console.error("PayPalCheckout: onCancel",e),onError:e=>console.error("PayPalCheckout: onError",e)}).render(d.current)}catch(e){r(),s("NewCustomer: renderPayPalButtons",e)}o()},N=async()=>{n();try{const e=await p.createPayment(l.operations.createPayment.data.options);return c("PayPalCheckout: createOrder",e),e}catch(e){r(),s("PayPalCheckout: createOrder",e)}o()},g=async e=>{n();try{c("PayPalCheckout: onApprove",e);const a=await p.tokenizePayment(e);c("NewCustomer: tokenizePayment",a),i("PayPalCheckout: onApprove",a),b(a.nonce)}catch(a){r(),s("PayPalCheckout: onApprove",a)}o()};return E(B,{children:[t("button",{className:"btn btn-outline-success",onClick:h,children:"Create PayPal Instance"}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:k,children:"Load PayPal JS SDK"}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:w,children:"Render PayPal Buttons"}),t("br",{}),t("br",{}),t("div",{ref:d}),t("br",{}),t("br",{}),t("button",{className:"btn btn-outline-success",onClick:async()=>{n();try{const e={...l.operations.transactionSale.data.parameters,paymentMethodNonce:C,deviceData:y.get("dataCollectorInstance")},a=await O("transaction","sale",[],e);c("NewCustomer: createTransaction",a),i("TransactionSale",a)}catch(e){r(),s("NewCustomer: createTransaction",e)}o()},children:"Create Transaction"})]})};P.propTypes={operations:v.object};const G=_(P,z,K);export{G as default};
//# sourceMappingURL=NewCustomer-03466747.js.map
