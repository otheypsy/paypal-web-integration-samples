{"version":3,"file":"export-5fac481c.js","sources":["../../src/lib/components/form/InputBody/InputBody.component.jsx","../../src/lib/components/router/Mount.component.jsx","../../src/lib/components/router/CustomRouter.component.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport classNames from '../Input.module.scss';\n\n/**\n * Component for <code>textarea</code> type input.\n *\n */\nconst InputBody = (props) => {\n\n    const onChange = (event) => {\n        (props.onChange.length === 2)\n            ? props.onChange(props.id, event.target.value)\n            : props.onChange(event.target.value);\n    };\n\n    return (\n        <div className=\"form-floating my-2\">\n            <textarea\n                id={props.id}\n                className={'form-control ' + classNames.input}\n                style={{height: props.height}}\n                placeholder=\"-- input here --\"\n                value={props.value}\n                onChange={onChange}\n            />\n            <label className={classNames.label}>{props.label}</label>\n        </div>\n    )\n};\n\nInputBody.propTypes = {\n    /** Identifier used as return value with onChange */\n    id: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    /** Label for the textarea */\n    label: PropTypes.string.isRequired,\n    /** Value of the textarea */\n    value: PropTypes.string.isRequired,\n    /** Callback function to handle value change */\n    onChange: PropTypes.func.isRequired,\n    /** CSS height of the textarea */\n    height: PropTypes.string,\n};\n\nInputBody.defaultProps = {\n    id: null,\n    height: '200px'\n};\n\nexport default InputBody;\n","import { Suspense } from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Routes } from 'react-router-dom'\nimport GenericPage from '../other/GenericPage/GenericPage.component'\n\nconst Mount = (props) => {\n    return (\n        <Suspense fallback={<GenericPage details=\"Loading...\" />}>\n            <Routes>\n                <Route element={<props.layout routes={props.routes} />}>\n                    {props.routes.map((route) => {\n                        return <Route key={route.path} path={route.path + '/*'} element={<route.element />} />\n                    })}\n                    <Route path=\"*\" element={<props.notFound />} />\n                </Route>\n            </Routes>\n        </Suspense>\n    )\n}\n\nMount.propTypes = {\n    /** Parent layout */\n    layout: PropTypes.elementType,\n    /** Routes to render */\n    routes: PropTypes.array,\n    /** Fallback component */\n    notFound: PropTypes.elementType,\n}\n\nexport default Mount\n","import { BrowserRouter as Router } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport GenericPage from '../other/GenericPage/GenericPage.component'\nimport Mount from './Mount.component'\n\nconst CustomRouter = (props) => {\n    return props.isBase ? (\n        <Router basename={props.basePath}>\n            <Mount {...props} />\n        </Router>\n    ) : (\n        <Mount {...props} />\n    )\n}\n\nCustomRouter.propTypes = {\n    /** Base path of mount */\n    basePath: PropTypes.string,\n    /** Check if base mainRouter of application */\n    isBase: PropTypes.bool,\n    /** Routes for the mainRouter */\n    routes: PropTypes.arrayOf(\n        PropTypes.shape({\n            path: PropTypes.string,\n            component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n        }),\n    ),\n    /** Layout of the mainRouter */\n    layout: PropTypes.func,\n    /** Template when route cannot be found */\n    notFound: PropTypes.func,\n}\n\nCustomRouter.defaultProps = {\n    basePath: '/',\n    isBase: false,\n    routes: [],\n    layout: () => <GenericPage message=\"Oops\" details=\"Layout not provided to `CustomerRouter`\" />,\n    notFound: () => <GenericPage message=\"404\" details=\"Not Found\" />,\n}\n\nexport default CustomRouter\n"],"names":["InputBody","props","onChange","event","jsxs","jsx","classNames","PropTypes","Mount","Suspense","GenericPage","Routes","Route","route","CustomRouter","Router"],"mappings":"+IAOM,MAAAA,EAAaC,GAAU,CAEnB,MAAAC,EAAYC,GAAU,CACvBF,EAAM,SAAS,SAAW,EACrBA,EAAM,SAASA,EAAM,GAAIE,EAAM,OAAO,KAAK,EAC3CF,EAAM,SAASE,EAAM,OAAO,KAAK,CAAA,EAIvC,OAAAC,EAAC,MAAI,CAAA,UAAU,qBACX,SAAA,CAAAC,EAAC,WAAA,CACG,GAAIJ,EAAM,GACV,UAAW,gBAAkBK,EAAW,MACxC,MAAO,CAAC,OAAQL,EAAM,MAAM,EAC5B,YAAY,mBACZ,MAAOA,EAAM,MACb,SAAAC,CAAA,CACJ,IACC,QAAM,CAAA,UAAWI,EAAW,MAAQ,WAAM,MAAM,CACrD,CAAA,CAAA,CAER,EAEAN,EAAU,UAAY,CAElB,GAAIO,EAAU,UAAU,CACpBA,EAAU,OACVA,EAAU,MAAA,CACb,EAED,MAAOA,EAAU,OAAO,WAExB,MAAOA,EAAU,OAAO,WAExB,SAAUA,EAAU,KAAK,WAEzB,OAAQA,EAAU,MACtB,EAEAP,EAAU,aAAe,CACrB,GAAI,KACJ,OAAQ,OACZ,EC5CA,MAAMQ,EAASP,GAEPI,EAACI,EAAAA,UAAS,SAAUJ,EAACK,GAAY,QAAQ,YAAa,CAAA,EAClD,SAACL,EAAAM,EAAA,CACG,WAACC,EAAM,CAAA,UAAUX,EAAM,OAAN,CAAa,OAAQA,EAAM,MAAQ,CAAA,EAC/C,SAAA,CAAMA,EAAA,OAAO,IAAKY,GACPR,EAAAO,EAAA,CAAuB,KAAMC,EAAM,KAAO,KAAM,QAASR,EAACQ,EAAM,QAAN,CAAA,CAAc,CAAA,EAA7DA,EAAM,IAA2D,CACvF,EACDR,EAACO,GAAM,KAAK,IAAI,QAAUP,EAAAJ,EAAM,SAAN,CAAe,CAAA,EAAI,CAAA,EACjD,EACJ,CACJ,CAAA,EAIRO,EAAM,UAAY,CAEd,OAAQD,EAAU,YAElB,OAAQA,EAAU,MAElB,SAAUA,EAAU,WACxB,ECtBA,MAAMO,EAAgBb,GACXA,EAAM,OACTI,EAACU,EAAO,CAAA,SAAUd,EAAM,SACpB,SAAAI,EAACG,EAAO,CAAA,GAAGP,CAAO,CAAA,EACtB,EAECI,EAAAG,EAAA,CAAO,GAAGP,CAAO,CAAA,EAI1Ba,EAAa,UAAY,CAErB,SAAUP,EAAU,OAEpB,OAAQA,EAAU,KAElB,OAAQA,EAAU,QACdA,EAAU,MAAM,CACZ,KAAMA,EAAU,OAChB,UAAWA,EAAU,UAAU,CAACA,EAAU,KAAMA,EAAU,MAAM,CAAC,CAAA,CACpE,CACL,EAEA,OAAQA,EAAU,KAElB,SAAUA,EAAU,IACxB,EAEAO,EAAa,aAAe,CACxB,SAAU,IACV,OAAQ,GACR,OAAQ,CAAC,EACT,OAAQ,IAAMT,EAACK,GAAY,QAAQ,OAAO,QAAQ,0CAA0C,EAC5F,SAAU,IAAML,EAACK,GAAY,QAAQ,MAAM,QAAQ,YAAY,CACnE"}