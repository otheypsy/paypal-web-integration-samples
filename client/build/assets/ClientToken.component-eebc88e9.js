import{u as d,b as p,d as u,c as m,e as k,a as T,F as I,j as n}from"./index-5183357d.js";import{c as b}from"./logger.utils-ababba19.js";import{w as y}from"./withOperations.hoc-a1e834ab.js";import{s as h,c as f}from"./bt.service-231e8587.js";import"./vendor-d2c1d7ba.js";import"./InputText.component-62651ba0.js";import"./http.utils-2a9b74b8.js";const{log:i,error:l}=b("ClientToken.component.jsx"),w={createClientToken:{label:"gateway.clientToken.generate()",type:"server",data:{parameters:{merchantAccountId:"odesai_USD"}}},createClientInstance:{label:"braintree-web.client.create()",type:"client",data:{options:{authorization:"CLIENT_TOKEN_HERE"}}}},g=t=>{const a=d(),o=p(),s=u(),c=m(),C=k();return T(I,{children:[n("button",{className:"btn btn-outline-success",onClick:async()=>{a();try{const e=await h("clientToken","generate",[],t.operations.createClientToken.data.parameters);if(i("createClientToken",e),s("ClientToken",e),!e?.clientToken)throw Error("Response does not contain client token");const r=t.operations.createClientInstance.data;r.options.authorization=e.clientToken,t.updateOperation("createClientInstance",r)}catch(e){c(),l(e)}o()},children:"Create Client Token"}),n("br",{}),n("br",{}),n("button",{className:"btn btn-outline-success",onClick:async()=>{a();try{const e=await f("Client",t.operations.createClientInstance.data.options);i("createClientInstance",e),s("ClientInstance",e),e&&C("clientInstance",e)}catch(e){c(),l(e)}o()},children:"Create Client Instance"})]})},R=y(g,w);export{R as default};
//# sourceMappingURL=ClientToken.component-eebc88e9.js.map
