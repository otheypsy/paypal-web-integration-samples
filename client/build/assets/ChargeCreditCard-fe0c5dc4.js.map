{"version":3,"file":"ChargeCreditCard-fe0c5dc4.js","sources":["../../src/app/braintree/pages/graphql/GraphQLCharge/sections/ChargeCreditCard.jsx"],"sourcesContent":["import createLoggers from '../../../../../../utils/logger.utils.jsx'\nimport withOperations from '../../../../../../layouts/withOperations.component.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../../../states/Busy/busy.hooks.jsx'\nimport { useAddOutput } from '../../../../../../states/Output/output.hooks.jsx'\nimport { useSetError } from '../../../../../../states/Error/error.hooks.jsx'\nimport { gqlInterface } from '../../../../../../services/bt.service.jsx'\n\nconst { log, error } = createLoggers('ChargeCreditCard.component.jsx')\n\nconst _operations = {\n    chargeCreditCard: {\n        label: 'chargeCreditCard',\n        type: 'gql',\n        data: {\n            uri: 'testing',\n            headers: [],\n            query: `\n                mutation ChargeCreditCard(myInput: ChargeCreditCardInput!, $hasDetails: Boolean!) {\n                    chargeCreditCard(input: $myInput) {\n                        clientMutationId\n                        transaction {\n                            id\n                            legacyId\n                            ...transactionFields @include(if: $hasDetails)\n                        }\n                    }\n                }\n\n                fragment transactionFields on Transaction {\n                    createdAt\n                    paymentMethod {\n                        id\n                        legacyId\n                    }\n                    amount {\n                        value\n                        currencyIsoCode\n                    }\n                    merchantAccountId\n                    orderId\n                    status\n                    statusHistory {\n                        ...statusHistoryFields\n                    }\n                }\n                `,\n            variables: {\n                myInput: {\n                    clientMutationId: Date.now().toString(),\n                    paymentMethodId: 'fake-valid-nonce',\n                    transaction: {\n                        orderId: Date.now().toString(),\n                        amount: '60.00',\n                        riskData: {\n                            deviceData: 'DEVICE_DATA_STRING',\n                        },\n                    },\n                },\n                hasDetails: true,\n            },\n        },\n    },\n}\n\nconst ChargeCreditCard = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const addOutput = useAddOutput()\n    const setError = useSetError()\n\n    const chargeCreditCard = async () => {\n        addBusy()\n        try {\n            const response = await gqlInterface(props.operations.data.query, props.operations.data.variables)\n            log('chargeCreditCard', response)\n            addOutput('ChargeCreditCard', response)\n        } catch (e) {\n            setError()\n            error(e)\n        }\n        removeBusy()\n    }\n\n    return (\n        <button className=\"btn btn-outline-success\" onClick={chargeCreditCard}>\n            Charge Credit Card\n        </button>\n    )\n}\n\nexport default withOperations(ChargeCreditCard, _operations)\n"],"names":["log","error","createLoggers","_operations","ChargeCreditCard","props","addBusy","useAddBusy","removeBusy","useRemoveBusy","addOutput","useAddOutput","setError","useSetError","response","gqlInterface","e","ChargeCreditCard$1","withOperations"],"mappings":"kSAOA,KAAM,CAAE,IAAAA,EAAK,MAAAC,CAAM,EAAIC,EAAc,gCAAgC,EAE/DC,EAAc,CAChB,iBAAkB,CACd,MAAO,mBACP,KAAM,MACN,KAAM,CACF,IAAK,UACL,QAAS,CAAC,EACV,MAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA8BP,UAAW,CACP,QAAS,CACL,iBAAkB,KAAK,IAAI,EAAE,SAAS,EACtC,gBAAiB,mBACjB,YAAa,CACT,QAAS,KAAK,IAAI,EAAE,SAAS,EAC7B,OAAQ,QACR,SAAU,CACN,WAAY,oBAChB,CACJ,CACJ,EACA,WAAY,EAChB,CACJ,CACJ,CACJ,EAEMC,EAAoBC,GAAU,CAChC,MAAMC,EAAUC,IACVC,EAAaC,IACbC,EAAYC,IACZC,EAAWC,IAejB,SACK,SAAO,CAAA,UAAU,0BAA0B,QAdvB,SAAY,CACzBP,IACJ,GAAA,CACM,MAAAQ,EAAW,MAAMC,EAAaV,EAAM,WAAW,KAAK,MAAOA,EAAM,WAAW,KAAK,SAAS,EAChGL,EAAI,mBAAoBc,CAAQ,EAChCJ,EAAU,mBAAoBI,CAAQ,QACjCE,GACIJ,IACTX,EAAMe,CAAC,CACX,CACWR,GAAA,EAI4D,SAEvE,oBAAA,CAAA,CAER,EAEAS,EAAeC,EAAed,EAAkBD,CAAW"}