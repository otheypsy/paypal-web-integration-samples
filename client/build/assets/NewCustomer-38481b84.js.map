{"version":3,"file":"NewCustomer-38481b84.js","sources":["../../src/app/braintree/pages/client/BTPwPPVault/sections/NewCustomer.jsx"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { useState, useRef } from 'react'\nimport BTPayPalCheckout from 'braintree-web/paypal-checkout'\nimport withOperations from '../../../../../../layouts/withOperations.component.jsx'\nimport { serverInterface } from '../../../../../../services/bt.service.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../../../states/Busy/busy.hooks.jsx'\nimport { useAddOutput } from '../../../../../../states/Output/output.hooks.jsx'\nimport { useSetError } from '../../../../../../states/Error/error.hooks.jsx'\nimport { useAppContext } from '../../../../../../states/AppContext/appContext.hooks.jsx'\nimport { log, danger } from '../../../../../../integrations/services/LoggerService.jsx'\n\nconst _timestamp = Date.now()\n\nconst _operations = {\n    paypalCheckoutCreate: {\n        label: 'braintree-web.paypalCheckout.create(options, callback)',\n        type: 'client',\n        data: {\n            options: {\n                client: 'CLIENT_INSTANCE_HERE',\n            },\n        },\n    },\n    loadPayPalSDK: {\n        label: 'paypalCheckoutInstance.loadPayPalSDK(options, callback)',\n        type: 'client',\n        data: {\n            options: {\n                currency: 'USD',\n                intent: 'capture',\n                'disable-funding': 'card',\n            },\n        },\n    },\n    renderPayPalButtons: {\n        label: 'window.paypal.Buttons(config).render',\n        type: 'client',\n        data: {\n            config: {\n                style: {\n                    layout: 'vertical',\n                    color: 'gold',\n                    shape: 'rect',\n                    label: 'paypal',\n                    tagline: false,\n                },\n            },\n        },\n    },\n    createPayment: {\n        label: 'paypalCheckoutInstance.createPayment(options, callback)',\n        type: 'client',\n        data: {\n            options: {\n                flow: 'checkout',\n                intent: 'capture',\n                amount: '100.00',\n                currency: 'USD',\n                requestBillingAgreement: true,\n                billingAgreementDetails: {\n                    description: 'Braintree PwPP - Checkout + Vault - ' + _timestamp,\n                },\n                enableShippingAddress: true,\n                shippingAddressEditable: true,\n            },\n        },\n    },\n    tokenizePayment: {\n        label: 'paypalCheckoutInstance.tokenizePayment(tokenizeOptions, callback)',\n        type: 'client',\n        data: {\n            tokenizeOptions: {},\n        },\n    },\n    transactionSale: {\n        label: 'gateway.transaction.sale(parameters, callback)',\n        type: 'server',\n        data: {\n            parameters: {\n                amount: '100.00',\n                merchantAccountId: 'odesai_USD',\n                paymentMethodNonce: 'NONCE_HERE',\n                deviceData: 'DEVICE_DATA_HERE',\n                options: {\n                    submitForSettlement: true,\n                },\n            },\n        },\n    },\n}\n\nconst _requiredContext = ['clientInstance', 'deviceData']\n\nconst NewCustomer = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const addOutput = useAddOutput()\n    const setError = useSetError()\n    const appContext = useAppContext()\n    const ppContainer = useRef()\n    const [ppInstance, setPPInstance] = useState('')\n    const [nonce, setNonce] = useState('')\n\n    const createPayPalInstance = async () => {\n        addBusy()\n        try {\n            const response = await BTPayPalCheckout.create({\n                client: appContext.clientInstance,\n            })\n            log('NewCustomer', response)\n            addOutput('PayPalInstance', response)\n            setPPInstance(response)\n        } catch (error) {\n            setError()\n            danger('NewCustomer: createPayPalInstance', error)\n        }\n        removeBusy()\n    }\n\n    const loadPayPalSDK = async () => {\n        addBusy()\n        await ppInstance.loadPayPalSDK(props.operations.loadPayPalSDK.data.options)\n        removeBusy()\n    }\n\n    const renderPayPalButtons = async () => {\n        addBusy()\n        try {\n            await window.paypal\n                .Buttons({\n                    ...props.operations.renderPayPalButtons.data.config,\n                    fundingSource: window.paypal.FUNDING.PAYPAL,\n                    createOrder: createOrder,\n                    onApprove: onApprove,\n                    onClick: () => console.log('PayPalCheckout: onClick'),\n                    onInit: () => console.log('PayPalCheckout: onInit'),\n                    onCancel: (error) => console.error('PayPalCheckout: onCancel', error),\n                    onError: (error) => console.error('PayPalCheckout: onError', error),\n                })\n                .render(ppContainer.current)\n        } catch (error) {\n            setError()\n            danger('NewCustomer: renderPayPalButtons', error)\n        }\n        removeBusy()\n    }\n\n    const createOrder = async () => {\n        addBusy()\n        try {\n            const response = await ppInstance.createPayment(props.operations.createPayment.data.options)\n            log('PayPalCheckout: createOrder', response)\n            return response\n        } catch (error) {\n            setError()\n            danger('PayPalCheckout: createOrder', error)\n        }\n        removeBusy()\n        return undefined\n    }\n\n    const onApprove = async (data) => {\n        addBusy()\n        try {\n            log('PayPalCheckout: onApprove', data)\n            const response = await ppInstance.tokenizePayment(data)\n            log('NewCustomer: tokenizePayment', response)\n            addOutput('PayPalCheckout: onApprove', response)\n            setNonce(response.nonce)\n        } catch (error) {\n            setError()\n            danger('PayPalCheckout: onApprove', error)\n        }\n        removeBusy()\n    }\n\n    const createTransaction = async () => {\n        addBusy()\n        try {\n            const params = {\n                ...props.operations.transactionSale.data.parameters,\n                paymentMethodNonce: nonce,\n                deviceData: appContext.get('dataCollectorInstance'),\n            }\n            const response = await serverInterface('transaction', 'sale', [], params)\n            log('NewCustomer: createTransaction', response)\n            addOutput('TransactionSale', response)\n        } catch (error) {\n            setError()\n            danger('NewCustomer: createTransaction', error)\n        }\n        removeBusy()\n    }\n\n    return (\n        <>\n            <button className=\"btn btn-outline-success\" onClick={createPayPalInstance}>\n                Create PayPal Instance\n            </button>\n            <br />\n            <br />\n            <button className=\"btn btn-outline-success\" onClick={loadPayPalSDK}>\n                Load PayPal JS SDK\n            </button>\n            <br />\n            <br />\n            <button className=\"btn btn-outline-success\" onClick={renderPayPalButtons}>\n                Render PayPal Buttons\n            </button>\n            <br />\n            <br />\n            <div ref={ppContainer} />\n            <br />\n            <br />\n            <button className=\"btn btn-outline-success\" onClick={createTransaction}>\n                Create Transaction\n            </button>\n        </>\n    )\n}\n\nNewCustomer.propTypes = {\n    operations: PropTypes.object,\n}\n\nexport default withOperations(NewCustomer, _operations, _requiredContext)\n"],"names":["_timestamp","_operations","_requiredContext","NewCustomer","props","addBusy","useAddBusy","removeBusy","useRemoveBusy","addOutput","useAddOutput","setError","useSetError","appContext","useAppContext","ppContainer","useRef","ppInstance","setPPInstance","useState","nonce","setNonce","createPayPalInstance","response","BTPayPalCheckout","log","error","danger","loadPayPalSDK","renderPayPalButtons","createOrder","onApprove","data","jsxs","Fragment","jsx","params","serverInterface","PropTypes","NewCustomer$1","withOperations"],"mappings":"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"}