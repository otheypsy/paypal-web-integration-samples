{"version":3,"file":"BasicDataCollector.component-3572159f.js","sources":["../../src/app/braintree/pages/client/BTDataCollector/sections/BasicDataCollector.component.jsx"],"sourcesContent":["import withOperations from '../../../../../../layouts/withOperations.hoc.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../../../states/Busy/busy.hooks.jsx'\nimport { useAddOutput } from '../../../../../../states/Output/output.hooks.jsx'\nimport { useSetError } from '../../../../../../states/Error/error.hooks.jsx'\nimport { useAppContext, useAddAppContext } from '../../../../../../states/AppContext/appContext.hooks.jsx'\nimport { clientInterface } from '../../../../../../services/bt.service.jsx'\nimport createLoggers from '../../../../../../utils/logger.utils.jsx'\n\nconst { log, error } = createLoggers('BasicDataCollector.component.jsx')\n\nconst _operations = {\n    createDataCollector: {\n        label: 'braintree-web.dataCollector.create()',\n        type: 'client',\n        data: {\n            options: {\n                client: 'CLIENT_INSTANCE_HERE',\n                paypal: true,\n            },\n        },\n    },\n}\n\nconst BasicDataCollector = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const addOutput = useAddOutput()\n    const setError = useSetError()\n    const appContext = useAppContext()\n    const addAppContext = useAddAppContext()\n\n    const populateClientInstance = () => {\n        if (!appContext.clientInstance) return null\n        const newData = props.operations.createDataCollector.data\n        newData.options.client = appContext.clientInstance\n        props.updateOperation('createDataCollector', newData)\n    }\n\n    const createDataCollector = async () => {\n        addBusy()\n        try {\n            const dcInstance = await clientInterface('DataCollector', {\n                ...props.operations.createDataCollector.data.options,\n                client: appContext.clientInstance,\n            })\n            log('createDataCollector', dcInstance)\n            addOutput('DataCollector', dcInstance)\n            if (dcInstance) addAppContext('dcInstance', dcInstance)\n        } catch (e) {\n            setError()\n            error(e)\n        }\n        removeBusy()\n    }\n\n    return (\n        <>\n            <button className=\"btn btn-outline-success\" onClick={populateClientInstance}>\n                Populate Client Instance\n            </button>\n            <br />\n            <br />\n            <button className=\"btn btn-outline-success\" onClick={createDataCollector}>\n                Create DC Instance\n            </button>\n        </>\n    )\n}\n\nexport default withOperations(BasicDataCollector, _operations, ['clientInstance'])\n"],"names":["log","error","createLoggers","_operations","BasicDataCollector","props","addBusy","useAddBusy","removeBusy","useRemoveBusy","addOutput","useAddOutput","setError","useSetError","appContext","useAppContext","addAppContext","useAddAppContext","jsxs","Fragment","jsx","newData","dcInstance","clientInterface","e","BasicDataCollector_component","withOperations"],"mappings":"yVAQA,KAAM,CAAE,IAAAA,EAAK,MAAAC,CAAM,EAAIC,EAAc,kCAAkC,EAEjEC,EAAc,CAChB,oBAAqB,CACjB,MAAO,uCACP,KAAM,SACN,KAAM,CACF,QAAS,CACL,OAAQ,uBACR,OAAQ,EACZ,CACJ,CACJ,CACJ,EAEMC,EAAsBC,GAAU,CAClC,MAAMC,EAAUC,IACVC,EAAaC,IACbC,EAAYC,IACZC,EAAWC,IACXC,EAAaC,IACbC,EAAgBC,IA0BtB,OAEQC,EAAAC,EAAA,CAAA,SAAA,CAAAC,EAAC,SAAO,CAAA,UAAU,0BAA0B,QA1BrB,IAAM,CACjC,GAAI,CAACN,EAAW,eAAuB,OAAA,KACjC,MAAAO,EAAUhB,EAAM,WAAW,oBAAoB,KAC7CgB,EAAA,QAAQ,OAASP,EAAW,eAC9BT,EAAA,gBAAgB,sBAAuBgB,CAAO,CAAA,EAsB6B,SAE7E,2BAAA,IACC,KAAG,EAAA,IACH,KAAG,EAAA,IACH,SAAO,CAAA,UAAU,0BAA0B,QAxBxB,SAAY,CAC5Bf,IACJ,GAAA,CACM,MAAAgB,EAAa,MAAMC,EAAgB,gBAAiB,CACtD,GAAGlB,EAAM,WAAW,oBAAoB,KAAK,QAC7C,OAAQS,EAAW,cAAA,CACtB,EACDd,EAAI,sBAAuBsB,CAAU,EACrCZ,EAAU,gBAAiBY,CAAU,EACjCA,GAAYN,EAAc,aAAcM,CAAU,QACjDE,EAAG,CACCZ,IACTX,EAAMuB,CAAC,CACX,CACWhB,GAAA,EAUmE,SAE1E,qBAAA,CACJ,CAAA,CAAA,CAER,EAEeiB,EAAAC,EAAetB,EAAoBD,EAAa,CAAC,gBAAgB,CAAC"}