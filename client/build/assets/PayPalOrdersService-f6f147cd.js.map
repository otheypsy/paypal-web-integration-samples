{"version":3,"file":"PayPalOrdersService-f6f147cd.js","sources":["../../src/services/api.service.jsx","../../src/app/paypal/services/PayPalOrdersService.jsx"],"sourcesContent":["const _config = {\n    base: ''\n};\n\nconst _setHeaders = (http, headers) => {\n    http.setRequestHeader('Content-type', 'application/json');\n    headers.forEach((header) => {\n        http.setRequestHeader(header.name, header.value);\n    })\n};\n\nconst _setResponseHandlers = (http, resolve) => {\n    http.onload = () => {\n        (http.status >= 200 && http.status < 300)\n            ? resolve([undefined, JSON.parse(http.response)])\n            : resolve([JSON.parse(http.response), undefined]);\n        window.isBusy = false;\n    };\n    http.onerror = () => {\n        resolve(['Client error', undefined]);\n        window.isBusy = false;\n    };\n};\n\nconst _request = (method, uri, data, headers) => {\n    return new Promise((resolve) => {\n        window.isBusy = true;\n        const http = new XMLHttpRequest(),\n            url = _config.base + uri;\n        http.open(method, url, true);\n        _setHeaders(http, headers);\n        _setResponseHandlers(http, resolve);\n        http.send(JSON.stringify(data));\n    });\n};\n\nconst ApiService = {\n    get: (uri, headers=[]) => {\n        return _request('GET', uri, null, headers);\n    },\n    post: (uri, data={}, headers=[]) => {\n        return _request('POST', uri, data, headers);\n    },\n    patch: (uri, data={}, headers=[]) => {\n        return _request('PATCH', uri, data, headers);\n    },\n    delete: (uri, data={}, headers=[]) => {\n        return _request('DELETE', uri, data, headers);\n    }\n};\n\nexport default ApiService;\n","import ApiService from '../../../services/api.service.jsx'\n\nconst _orders = {\n    create: async (order) => {\n        const uri = '/paypal/paypal/order/create'\n        const response = await ApiService.post(uri, order)\n        if (response.data) return response.data\n        else return null\n    },\n\n    execute: async (orderID) => {\n        const uri = '/paypal/paypal/order/execute'\n        const response = await ApiService.post(uri, {\n            orderID: orderID,\n        })\n        if (response.data) return response.data\n        else return null\n    },\n}\n\nexport default {\n    orders: _orders,\n}\n"],"names":["_config","_setHeaders","http","headers","header","_setResponseHandlers","resolve","_request","method","uri","data","url","ApiService","_orders","order","response","orderID","PayPalOrdersService"],"mappings":"AAAA,MAAMA,EAAU,CACZ,KAAM,EACV,EAEMC,EAAc,CAACC,EAAMC,IAAY,CAC9BD,EAAA,iBAAiB,eAAgB,kBAAkB,EAChDC,EAAA,QAASC,GAAW,CACxBF,EAAK,iBAAiBE,EAAO,KAAMA,EAAO,KAAK,CAAA,CAClD,CACL,EAEMC,EAAuB,CAACH,EAAMI,IAAY,CAC5CJ,EAAK,OAAS,IAAM,CACfA,EAAK,QAAU,KAAOA,EAAK,OAAS,IAC/BI,EAAQ,CAAC,OAAW,KAAK,MAAMJ,EAAK,QAAQ,CAAC,CAAC,EAC9CI,EAAQ,CAAC,KAAK,MAAMJ,EAAK,QAAQ,EAAG,MAAS,CAAC,EACpD,OAAO,OAAS,EAAA,EAEpBA,EAAK,QAAU,IAAM,CACTI,EAAA,CAAC,eAAgB,MAAS,CAAC,EACnC,OAAO,OAAS,EAAA,CAExB,EAEMC,EAAW,CAACC,EAAQC,EAAKC,EAAMP,IAC1B,IAAI,QAASG,GAAY,CAC5B,OAAO,OAAS,GAChB,MAAMJ,EAAO,IAAI,eACbS,EAAMX,EAAQ,KAAOS,EACpBP,EAAA,KAAKM,EAAQG,EAAK,EAAI,EAC3BV,EAAYC,EAAMC,CAAO,EACzBE,EAAqBH,EAAMI,CAAO,EAClCJ,EAAK,KAAK,KAAK,UAAUQ,CAAI,CAAC,CAAA,CACjC,EAGCE,EAAa,CACf,IAAK,CAACH,EAAKN,EAAQ,KACRI,EAAS,MAAOE,EAAK,KAAMN,CAAO,EAE7C,KAAM,CAACM,EAAKC,EAAK,CAAA,EAAIP,EAAQ,CAAA,IAClBI,EAAS,OAAQE,EAAKC,EAAMP,CAAO,EAE9C,MAAO,CAACM,EAAKC,EAAK,CAAA,EAAIP,EAAQ,CAAA,IACnBI,EAAS,QAASE,EAAKC,EAAMP,CAAO,EAE/C,OAAQ,CAACM,EAAKC,EAAK,CAAA,EAAIP,EAAQ,CAAA,IACpBI,EAAS,SAAUE,EAAKC,EAAMP,CAAO,CAEpD,EC/CMU,EAAU,CACZ,OAAQ,MAAOC,GAAU,CACrB,MAAML,EAAM,8BACNM,EAAW,MAAMH,EAAW,KAAKH,EAAKK,CAAK,EACjD,OAAIC,EAAS,KAAaA,EAAS,KACvB,IAChB,EAEA,QAAS,MAAOC,GAAY,CACxB,MAAMP,EAAM,+BACNM,EAAW,MAAMH,EAAW,KAAKH,EAAK,CACxC,QAAAO,CAAA,CACH,EACD,OAAID,EAAS,KAAaA,EAAS,KACvB,IAChB,CACJ,EAEeE,EAAA,CACX,OAAQJ,CACZ"}