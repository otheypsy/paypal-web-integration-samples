{"version":3,"file":"ChargeCreditCard-43aa82ed.js","sources":["../../src/app/braintree/pages/gql/GQLCharge/sections/ChargeCreditCard.jsx"],"sourcesContent":["import createLoggers from '../../../../../../utils/logger.utils.jsx'\nimport withOperations from '../../../../../../layouts/withOperations.hoc.jsx'\nimport { useAddBusy, useRemoveBusy } from '../../../../../../states/Busy/busy.hooks.jsx'\nimport { useAddOutput } from '../../../../../../states/Output/output.hooks.jsx'\nimport { useSetError } from '../../../../../../states/Error/error.hooks.jsx'\nimport { gqlInterface } from '../../../../../../services/bt.service.jsx'\n\nconst { log, error } = createLoggers('ChargeCreditCard.component.jsx')\n\nconst query = `\n    mutation ChargeCreditCard($myInput: ChargeCreditCardInput!, $hasDetails: Boolean!) {\n        chargeCreditCard(input: $myInput) {\n            clientMutationId\n            transaction {\n                id\n                legacyId\n                ...transactionFields @include(if: $hasDetails)\n            }\n        }\n    }\n\n    fragment transactionFields on Transaction {\n        createdAt\n        paymentMethod {\n            id\n            legacyId\n        }\n        amount {\n            value\n            currencyIsoCode\n        }\n        merchantAccountId\n        orderId\n        status\n        statusHistory {\n            ...statusHistoryFields\n        }\n    }\n\n    fragment statusHistoryFields on PaymentStatusEvent {\n        source\n        status\n        terminal\n        timestamp\n        ...settled\n        ...gatewayRejected\n        ...processorDecline\n    }\n\n    fragment settled on SettledEvent {\n        settlementBatchId\n        processorResponse {\n            legacyCode\n            message\n            avsStreetAddressResponse\n            avsPostalCodeResponse\n            cvvResponse\n        }\n    }\n\n    fragment processorDecline on ProcessorDeclinedEvent {\n        declineType\n        processorResponse {\n            legacyCode\n            message\n        }\n    }\n\n    fragment gatewayRejected on GatewayRejectedEvent {\n        gatewayRejectionReason\n        riskDecision\n        processorResponse {\n            legacyCode\n            message\n            avsStreetAddressResponse\n            avsPostalCodeResponse\n            cvvResponse\n        }\n    }\n`\n\nconst _operations = {\n    chargeCreditCard: {\n        label: 'chargeCreditCard',\n        type: 'gql',\n        data: {\n            query: query,\n            variables: {\n                myInput: {\n                    clientMutationId: Date.now().toString(),\n                    paymentMethodId: 'fake-valid-nonce',\n                    transaction: {\n                        orderId: Date.now().toString(),\n                        amount: '60.00',\n                        riskData: {\n                            deviceData: 'DEVICE_DATA_STRING',\n                        },\n                    },\n                },\n                hasDetails: true,\n            },\n        },\n    },\n}\n\nconst ChargeCreditCard = (props) => {\n    const addBusy = useAddBusy()\n    const removeBusy = useRemoveBusy()\n    const addOutput = useAddOutput()\n    const setError = useSetError()\n\n    const chargeCreditCard = async () => {\n        addBusy()\n        try {\n            const response = await gqlInterface(props.operations.data.query, props.operations.data.variables)\n            log('chargeCreditCard', response)\n            addOutput('ChargeCreditCard', response)\n        } catch (e) {\n            setError()\n            error(e)\n        }\n        removeBusy()\n    }\n\n    return (\n        <button className=\"btn btn-outline-success\" onClick={chargeCreditCard}>\n            Charge Credit Card\n        </button>\n    )\n}\n\nexport default withOperations(ChargeCreditCard, _operations)\n"],"names":["log","error","createLoggers","query","_operations","ChargeCreditCard","props","addBusy","useAddBusy","removeBusy","useRemoveBusy","addOutput","useAddOutput","setError","useSetError","response","gqlInterface","ChargeCreditCard$1","withOperations"],"mappings":"wTAOA,KAAM,CAAE,IAAAA,EAAK,MAAAC,CAAM,EAAIC,EAAc,gCAAgC,EAE/DC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAwERC,EAAc,CAChB,iBAAkB,CACd,MAAO,mBACP,KAAM,MACN,KAAM,CACF,MAAAD,EACA,UAAW,CACP,QAAS,CACL,iBAAkB,KAAK,IAAI,EAAE,SAAS,EACtC,gBAAiB,mBACjB,YAAa,CACT,QAAS,KAAK,IAAI,EAAE,SAAS,EAC7B,OAAQ,QACR,SAAU,CACN,WAAY,oBAChB,CACJ,CACJ,EACA,WAAY,EAChB,CACJ,CACJ,CACJ,EAEME,EAAoBC,GAAU,CAChC,MAAMC,EAAUC,IACVC,EAAaC,IACbC,EAAYC,IACZC,EAAWC,IAejB,SACK,SAAO,CAAA,UAAU,0BAA0B,QAdvB,SAAY,CACzBP,IACJ,GAAA,CACM,MAAAQ,EAAW,MAAMC,EAAaV,EAAM,WAAW,KAAK,MAAOA,EAAM,WAAW,KAAK,SAAS,EAChGN,EAAI,mBAAoBe,CAAQ,EAChCJ,EAAU,mBAAoBI,CAAQ,QACjC,EAAG,CACCF,IACTZ,EAAM,CAAC,CACX,CACWQ,GAAA,EAI4D,SAEvE,oBAAA,CAAA,CAER,EAEAQ,EAAeC,EAAeb,EAAkBD,CAAW"}