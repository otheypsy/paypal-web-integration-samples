import{c as R,d as S,e as g,f as I,i as D,r as u,P as A}from"./index-20ef1387.js";import{B as f,s as B}from"./BraintreeInterface-817e415d.js";import{w as v}from"./withSDKOperations-5fb6bbf0.js";import{l as c,d as r}from"./LoggerService-5538c8b6.js";import"./_commonjs-dynamic-modules-302442b1.js";import"./InputText.component-6208ec5e.js";const T=Date.now(),O={paypalCheckoutCreate:{label:"braintree-web.paypalCheckout.create(options, callback)",type:"client",data:{options:{client:"CLIENT_INSTANCE_HERE"}}},loadPayPalSDK:{label:"paypalCheckoutInstance.loadPayPalSDK(options, callback)",type:"client",data:{options:{currency:"USD",intent:"capture","disable-funding":"card"}}},renderPayPalButtons:{label:"window.paypal.Buttons(config).render",type:"client",data:{config:{style:{layout:"vertical",color:"gold",shape:"rect",label:"paypal",tagline:!1}}}},createPayment:{label:"paypalCheckoutInstance.createPayment(options, callback)",type:"client",data:{options:{flow:"checkout",intent:"capture",amount:"100.00",currency:"USD",requestBillingAgreement:!0,billingAgreementDetails:{description:"Braintree PwPP - Checkout + Vault - "+T},enableShippingAddress:!0,shippingAddressEditable:!0}}},tokenizePayment:{label:"paypalCheckoutInstance.tokenizePayment(tokenizeOptions, callback)",type:"client",data:{tokenizeOptions:{}}},transactionSale:{label:"gateway.transaction.sale(parameters, callback)",type:"server",data:{parameters:{amount:"100.00",merchantAccountId:"odesai_USD",paymentMethodNonce:"NONCE_HERE",deviceData:"DEVICE_DATA_HERE",options:{submitForSettlement:!0}}}}},_=["clientInstance","deviceData"],P=s=>{const a=R(),n=S(),l=g(),o=I(),p=D(),y=u.useRef(),[i,d]=u.useState(""),[m,C]=u.useState(""),b=async()=>{a();try{const e=await f.create({client:p.clientInstance});c("NewCustomer",e),l("PayPalInstance",e),d(e)}catch(e){o(),r("NewCustomer: createPayPalInstance",e)}n()},k=async()=>{a(),await i.loadPayPalSDK(s.operations.loadPayPalSDK.data.options),n()},E=async()=>{a();try{await window.paypal.Buttons({...s.operations.renderPayPalButtons.data.config,fundingSource:window.paypal.FUNDING.PAYPAL,createOrder:h,onApprove:w,onClick:()=>console.log("PayPalCheckout: onClick"),onInit:()=>console.log("PayPalCheckout: onInit"),onCancel:e=>console.error("PayPalCheckout: onCancel",e),onError:e=>console.error("PayPalCheckout: onError",e)}).render(y.current)}catch(e){o(),r("NewCustomer: renderPayPalButtons",e)}n()},h=async()=>{a();try{const e=await i.createPayment(s.operations.createPayment.data.options);return c("PayPalCheckout: createOrder",e),e}catch(e){o(),r("PayPalCheckout: createOrder",e)}n()},w=async e=>{a();try{c("PayPalCheckout: onApprove",e);const t=await i.tokenizePayment(e);c("NewCustomer: tokenizePayment",t),l("PayPalCheckout: onApprove",t),C(t.nonce)}catch(t){o(),r("PayPalCheckout: onApprove",t)}n()},N=async()=>{a();try{const e={...s.operations.transactionSale.data.parameters,paymentMethodNonce:m,deviceData:p.get("dataCollectorInstance")},t=await B("transaction","sale",[],e);c("NewCustomer: createTransaction",t),l("TransactionSale",t)}catch(e){o(),r("NewCustomer: createTransaction",e)}n()};return React.createElement(React.Fragment,null,React.createElement("button",{className:"btn btn-outline-success",onClick:b},"Create PayPal Instance"),React.createElement("br",null),React.createElement("br",null),React.createElement("button",{className:"btn btn-outline-success",onClick:k},"Load PayPal JS SDK"),React.createElement("br",null),React.createElement("br",null),React.createElement("button",{className:"btn btn-outline-success",onClick:E},"Render PayPal Buttons"),React.createElement("br",null),React.createElement("br",null),React.createElement("div",{ref:y}),React.createElement("br",null),React.createElement("br",null),React.createElement("button",{className:"btn btn-outline-success",onClick:N},"Create Transaction"))};P.propTypes={operations:A.object};const L=v(P,O,_);export{L as default};
